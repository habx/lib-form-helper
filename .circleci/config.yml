# --------------------------------------------------- #
# https://github.com/habx/devops-template-circleci    #
# ----------- DO NOT EDIT BELOW THIS LINE ----------- #
# --------------------------------------------------- #
version: 2.1

# --- Anchor alias ---- #
# - Docker configuration - #
alias:
  - &node_executor
    executor:
      name: node/default
      # See https://circleci.com/developer/orbs/orb/circleci/node for available tags.
      tag: "14.15"
  - &docker_buildpack_deps_configuration
    docker:
      - image: circleci/buildpack-deps:stretch
        user: root
  - &docker_buildpack_deps_python_configuration
    docker:
      - image: circleci/python
        user: root
# - Jobs filters - #
  - &filters_ignore_tags
    tags:
      ignore: /.*/
  - &filters_ignore_branches
    branches:
      ignore: /.*/
  - &filters_allow_tags
    tags:
      only: /^v.*/
  - &filters_allow_branch_dev
    branches:
      only:
        - dev
# - Step - #
  - &preconfig
    run:
      name: Preconfigure environment ~/.npmrc
      command: |
        echo "@habx:registry=https://npm.pkg.github.com/" > ~/.npmrc
        echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc
# - Node modules - #
  - &install_npm
    node/install-npm:
      version: "7"
  - &install_dependencies
    node/install-packages:
      cache-version: "{{ .Environment.CACHE_VERSION }}"
      include-branch-in-cache-key: false
      override-ci-command: npm ci --no-audit
# --- Anchor alias ---- #
jobs:
  build:
    <<: *node_executor
    steps:
      - checkout
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run:
          name: Building source code
          command: |
            export NODE_ENV=production
            npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist
            - dist-cli

  storybook-build:
    <<: *node_executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run: npm run storybook:build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .storybook-static

  lint:
    <<: *node_executor
    steps:
      - checkout
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run: npm run lint

  tests:
    <<: *node_executor
    steps:
      - checkout
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run: npm run test

  tests-puppeteer:
    <<: *node_executor
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run:
          name: apt update (fix missing deps libproxy1v5_0.4.14-2+deb9u1_amd64.deb)
          command: |
            apt-get -y update
      - puppeteer/install
      - run:
          name: Puppeteer test
          command: |
            npm run test
  npm-publish:
    <<: *node_executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run: npm publish

  storybook-publish:
    <<: *node_executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run: npm run storybook:deploy

  tsdoc-publish:
    <<: *node_executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_npm
      - *install_dependencies
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            npm run build:documentation
            npx gh-pages --dist docs --repo https://${GITHUB_TOKEN}@github.com/${CIRCLE_REPOSITORY_URL#"git@github.com:"} --silent --message "[SKIP CI] CircleCI build ${CIRCLE_BUILD_NUM} pushed to Github Pages"

orbs:
  node: circleci/node@4.1.0
  puppeteer: threetreeslight/puppeteer@0.1.2
# --- END --- #
# --------------------------------------------------- #
# -------------- DEFINE YOUR WORKFLOW --------------- #
# --------------------------------------------------- #
workflows:
  build:
    jobs:
      - lint:
          context: default_env_vars
          filters:
            <<: *filters_allow_tags
      - build:
          context: default_env_vars
          requires:
            - lint
          filters:
            <<: *filters_allow_tags
      - tests:
          context: default_env_vars
          requires:
            - build
            - lint
          filters:
            <<: *filters_allow_tags
      - npm-publish:
          context: default_env_vars
          requires:
            - build
            - lint
            - tests
          filters:
            <<: *filters_allow_tags
            <<: *filters_ignore_branches

